import { Form } from "./models/form";
import type { FormProperties } from "./models/formProperties";
/** Create a new form.
 *
 * You can either pass a default configuration for the form.
 *
 * ----
 * ``` svelte
 * <script>
 *   const form = useForm({
 *     firstName: { initial: "CACHED_NAME", validators: [required, maxLength(10)] }
 *   })
 * </script>
 *
 * <input name="firstName />
 * ```
 * ----
 * or handle everything directly in the template
 *
 * ----
 *
 * ```svelte
 * <script>
 *   const form = useForm();
 * </script>
 *
 * <input name="firstName" value="CACHED_NAME" use:validators={[required, maxLength(10)]} />
 * ```
 */
export declare function useForm<Keys extends keyof T = "", T extends FormProperties = any>(properties?: T | FormProperties, formName?: string): {
    (node: HTMLFormElement): {
        update: () => void;
        destroy: () => void;
    };
    subscribe: (callback: (form: Form<Keys> & import("./models/form").FormControlsSpecified<Keys> & import("./models/form").FormControlsUnspecified) => void) => {
        unsubscribe: () => void;
    };
    set: (value: Form<Keys> & import("./models/form").FormControlsSpecified<Keys> & import("./models/form").FormControlsUnspecified) => void;
};
